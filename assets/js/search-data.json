{
  
    
        "post0": {
            "title": "County-Level Economic Distress Index",
            "content": "Summary . The Distressed Communities Index (DCI) combines seven complementary economic indicators into a single holistic and comparative measure of community well-being. The index is constructed from the U.S. Census Bureau’s American Community Survey 5-Year Estimates and Business Patterns datasets. . The seven component metrics of the DCI are: . No high school diploma: Percent of the 25+ population without a high school diploma or equivalent | Housing vacancy rate: Percent of habitable housing that is unoccupied, excluding properties that are for seasonal, recreational, or occasional use | Adults not working: Percent of the prime-age population (25-64) not currently in work | Poverty rate: Percent of the population living under the poverty line | Median income ratio: Median household income as a percent of the state’s median household income (to account for cost of living differences across states) | Change in employment: Percent change in the number of jobs | Change in establishments: Percent change in the number of business establishments | . Please click here to access the data used to create the maps below. . Economic Distress Scores for U.S. Counties . The interactive map of U.S. counties is too large to render in this post. Please click here to download an interactive version of this map. Once you have the map open, you can zoom and drag the map with your mouse just like you would on Google Maps. . If you hover your mouse over a county, it will show you the county name and state, along with the following numbers: . Distress Score: These scores range from 0 to 100 and represent a percentile rank for that county. Higher scores are bad. For example, a score of 100 represents the most economically distressed county in the United States (i.e., with respect to the data I used). | Distress Rank within U.S.: This number shows how a county compares to other counties in the United States. Unlike the distress score, lower numbers are bad, so a rank of 1 means that county is more distressed, on average, than any other county in the United States. | Distress Rank within State: This only considers counties within the same state. For example, Johnson County has a rank of 105, which means it is the least distressed, on average, of the 105 counties in Kansas. | . The colors on the map are based on the Distress Score, so gold = &quot;good&quot; and blue = &quot;bad.&quot; . Economic Distress Scores for Kansas Counties . Click here to download an interactive map of Kansas. . Methodology . Each component is weighted equally in the index, which itself is calculated by ranking communities on each of the seven metrics, taking the average of those ranks, and then normalizing the average to be equivalent to a percentile. Distress scores range from approaching zero to 100.0, such that the zip code with the average rank of 12,500 out of 25,000 will register a distress score of 50.0. Communities are then grouped into quintiles, or fifths. The best-performing quintile is considered “prosperous,” the second-best “comfortable,” the third “mid-tier,” the fourth “at risk,” and the fifth, or worst-performing, “distressed.” . The main difference is the unemployment measure. . Source notes: . This year’s DCI presents results for two time periods reflecting the composition and availability of the Census Bureau’s ACS 5-Year Estimates: 2007-2011 and 2012-2016. The 5-year estimates are constructed from five years’ worth of data collection, reflecting the length of time required to compile enough data to provide meaningful and accurate estimates at fine geographic scales (such as zip codes). The 2007-2011 5-year estimates represent the first installment available at the zip code level, and the 2012-2016 5-year estimates are the most recent. Business Patterns data are available annually, and we have naturally chosen to include and analyze the years that match the ends of each ACS window. . This year’s materials, report, and data interactive present the results from the DCI calculated for each time period, with the discussion defaulting to the more recent period where not specified. The two universes of zip codes are not completely identical, as just over 500 zip codes appear in the latter dataset but not the former and just over 700 zip codes the former but not the latter. These zip codes were included in the DCI calculated for their respective periods but excluded from any section of the analysis that directly compares zip codes over time. The discrepancies in coverage can be attributed to the rare formation of new zip codes and to zip codes falling below the 500-person threshold necessary to be included in either period (the threshold excludes institutionalized residents, students, and active duty personnel in order to prevent the results from being artificially biased by prisons, colleges and universities, and military bases). . Data notes: . In instances where employment estimates from Business Patterns were suppressed by the Census Bureau in order to preserve privacy, the DCI defaulted to the next-highest level geography to produce a growth estimate that could enter into the index. This affected nearly 4,000 zip codes in the 2012-2016 DCI and 36 counties. For example, the statewide job growth rate of 4.7 percent entered into the index as the job growth rate for the three North Dakota counties for which employment figures were suppressed. .",
            "url": "https://kdc-ks-gov.github.io/kansas-data/distress-index/",
            "relUrl": "/distress-index/",
            "date": " • Sep 28, 2020"
        }
        
    
  
    
        ,"post1": {
            "title": "Fastpages Notebook Blog Post",
            "content": "About . This notebook is a demonstration of some of capabilities of fastpages with notebooks. . With fastpages you can save your jupyter notebooks into the _notebooks folder at the root of your repository, and they will be automatically be converted to Jekyll compliant blog posts! . Front Matter . The first cell in your Jupyter Notebook or markdown blog post contains front matter. Front matter is metadata that can turn on/off options in your Notebook. It is formatted like this: . # &quot;My Title&quot; &gt; &quot;Awesome summary&quot; - toc:true- branch: master- badges: true- comments: true - author: Hamel Husain &amp; Jeremy Howard - categories: [fastpages, jupyter] . Setting toc: true will automatically generate a table of contents | Setting badges: true will automatically include GitHub and Google Colab links to your notebook. | Setting comments: true will enable commenting on your blog post, powered by utterances. | . The title and description need to be enclosed in double quotes only if they include special characters such as a colon. More details and options for front matter can be viewed on the front matter section of the README. . Markdown Shortcuts . A #hide comment at the top of any code cell will hide both the input and output of that cell in your blog post. . A #hide_input comment at the top of any code cell will only hide the input of that cell. . The comment #hide_input was used to hide the code that produced this. . put a #collapse-hide flag at the top of any cell if you want to hide that cell by default, but give the reader the option to show it: . import pandas as pd import altair as alt . . put a #collapse-show flag at the top of any cell if you want to show that cell by default, but give the reader the option to hide it: . cars = &#39;https://vega.github.io/vega-datasets/data/cars.json&#39; movies = &#39;https://vega.github.io/vega-datasets/data/movies.json&#39; sp500 = &#39;https://vega.github.io/vega-datasets/data/sp500.csv&#39; stocks = &#39;https://vega.github.io/vega-datasets/data/stocks.csv&#39; flights = &#39;https://vega.github.io/vega-datasets/data/flights-5k.json&#39; . . Interactive Charts With Altair . Charts made with Altair remain interactive. Example charts taken from this repo, specifically this notebook. . Example 1: DropDown . # use specific hard-wired values as the initial selected values selection = alt.selection_single( name=&#39;Select&#39;, fields=[&#39;Major_Genre&#39;, &#39;MPAA_Rating&#39;], init={&#39;Major_Genre&#39;: &#39;Drama&#39;, &#39;MPAA_Rating&#39;: &#39;R&#39;}, bind={&#39;Major_Genre&#39;: alt.binding_select(options=genres), &#39;MPAA_Rating&#39;: alt.binding_radio(options=mpaa)} ) # scatter plot, modify opacity based on selection alt.Chart(df).mark_circle().add_selection( selection ).encode( x=&#39;Rotten_Tomatoes_Rating:Q&#39;, y=&#39;IMDB_Rating:Q&#39;, tooltip=&#39;Title:N&#39;, opacity=alt.condition(selection, alt.value(0.75), alt.value(0.05)) ) . Example 2: Tooltips . alt.Chart(df).mark_circle().add_selection( alt.selection_interval(bind=&#39;scales&#39;, encodings=[&#39;x&#39;]) ).encode( alt.X(&#39;Rotten_Tomatoes_Rating&#39;, type=&#39;quantitative&#39;), alt.Y(&#39;IMDB_Rating&#39;, type=&#39;quantitative&#39;, axis=alt.Axis(minExtent=30)), # y=alt.Y(&#39;IMDB_Rating:Q&#39;, ), # use min extent to stabilize axis title placement tooltip=[&#39;Title:N&#39;, &#39;Release_Date:N&#39;, &#39;IMDB_Rating:Q&#39;, &#39;Rotten_Tomatoes_Rating:Q&#39;] ).properties( width=500, height=400 ) . Example 3: More Tooltips . label = alt.selection_single( encodings=[&#39;x&#39;], # limit selection to x-axis value on=&#39;mouseover&#39;, # select on mouseover events nearest=True, # select data point nearest the cursor empty=&#39;none&#39; # empty selection includes no data points ) # define our base line chart of stock prices base = alt.Chart().mark_line().encode( alt.X(&#39;date:T&#39;), alt.Y(&#39;price:Q&#39;, scale=alt.Scale(type=&#39;log&#39;)), alt.Color(&#39;symbol:N&#39;) ) alt.layer( base, # base line chart # add a rule mark to serve as a guide line alt.Chart().mark_rule(color=&#39;#aaa&#39;).encode( x=&#39;date:T&#39; ).transform_filter(label), # add circle marks for selected time points, hide unselected points base.mark_circle().encode( opacity=alt.condition(label, alt.value(1), alt.value(0)) ).add_selection(label), # add white stroked text to provide a legible background for labels base.mark_text(align=&#39;left&#39;, dx=5, dy=-5, stroke=&#39;white&#39;, strokeWidth=2).encode( text=&#39;price:Q&#39; ).transform_filter(label), # add text labels for stock prices base.mark_text(align=&#39;left&#39;, dx=5, dy=-5).encode( text=&#39;price:Q&#39; ).transform_filter(label), data=stocks ).properties( width=500, height=400 ) . Data Tables . You can display tables per the usual way in your blog: . df[[&#39;Title&#39;, &#39;Worldwide_Gross&#39;, &#39;Production_Budget&#39;, &#39;Distributor&#39;, &#39;MPAA_Rating&#39;, &#39;IMDB_Rating&#39;, &#39;Rotten_Tomatoes_Rating&#39;]].head() . Title Worldwide_Gross Production_Budget Distributor MPAA_Rating IMDB_Rating Rotten_Tomatoes_Rating . 0 The Land Girls | 146083.0 | 8000000.0 | Gramercy | R | 6.1 | NaN | . 1 First Love, Last Rites | 10876.0 | 300000.0 | Strand | R | 6.9 | NaN | . 2 I Married a Strange Person | 203134.0 | 250000.0 | Lionsgate | None | 6.8 | NaN | . 3 Let&#39;s Talk About Sex | 373615.0 | 300000.0 | Fine Line | None | NaN | 13.0 | . 4 Slam | 1087521.0 | 1000000.0 | Trimark | R | 3.4 | 62.0 | . Images . Local Images . You can reference local images and they will be copied and rendered on your blog automatically. You can include these with the following markdown syntax: . ![](my_icons/fastai_logo.png) . . Remote Images . Remote images can be included with the following markdown syntax: . ![](https://image.flaticon.com/icons/svg/36/36686.svg) . . Animated Gifs . Animated Gifs work, too! . ![](https://upload.wikimedia.org/wikipedia/commons/7/71/ChessPawnSpecialMoves.gif) . . Captions . You can include captions with markdown images like this: . ![](https://www.fast.ai/images/fastai_paper/show_batch.png &quot;Credit: https://www.fast.ai/2020/02/13/fastai-A-Layered-API-for-Deep-Learning/&quot;) . . Other Elements . GitHub Flavored Emojis . Typing I give this post two :+1:! will render this: . I give this post two :+1:! . Tweetcards . Typing &gt; twitter: https://twitter.com/jakevdp/status/1204765621767901185?s=20 will render this: Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 . Youtube Videos . Typing &gt; youtube: https://youtu.be/XfoYk_Z5AkI will render this: . Boxes / Callouts . Typing &gt; Warning: There will be no second warning! will render this: . Warning: There will be no second warning! . Typing &gt; Important: Pay attention! It&#39;s important. will render this: . Important: Pay attention! It&#8217;s important. . Typing &gt; Tip: This is my tip. will render this: . Tip: This is my tip. . Typing &gt; Note: Take note of this. will render this: . Note: Take note of this. . Typing &gt; Note: A doc link to [an example website: fast.ai](https://www.fast.ai/) should also work fine. will render in the docs: . Note: A doc link to an example website: fast.ai should also work fine. . Footnotes . You can have footnotes in notebooks, however the syntax is different compared to markdown documents. This guide provides more detail about this syntax, which looks like this: . For example, here is a footnote {% fn 1 %}. And another {% fn 2 %} {{ &#39;This is the footnote.&#39; | fndetail: 1 }} {{ &#39;This is the other footnote. You can even have a [link](www.github.com)!&#39; | fndetail: 2 }} . For example, here is a footnote 1. . And another 2 . 1. This is the footnote.↩ . 2. This is the other footnote. You can even have a link!↩ .",
            "url": "https://kdc-ks-gov.github.io/kansas-data/jupyter/2020/02/20/test.html",
            "relUrl": "/jupyter/2020/02/20/test.html",
            "date": " • Feb 20, 2020"
        }
        
    
  
    
        ,"post2": {
            "title": "An Example Markdown Post",
            "content": "Example Markdown Post . Basic setup . Jekyll requires blog post files to be named according to the following format: . YEAR-MONTH-DAY-filename.md . Where YEAR is a four-digit number, MONTH and DAY are both two-digit numbers, and filename is whatever file name you choose, to remind yourself what this post is about. .md is the file extension for markdown files. . The first line of the file should start with a single hash character, then a space, then your title. This is how you create a “level 1 heading” in markdown. Then you can create level 2, 3, etc headings as you wish but repeating the hash character, such as you see in the line ## File names above. . Basic formatting . You can use italics, bold, code font text, and create links. Here’s a footnote 1. Here’s a horizontal rule: . . Lists . Here’s a list: . item 1 | item 2 | . And a numbered list: . item 1 | item 2 | Boxes and stuff . This is a quotation . . You can include alert boxes …and… . . You can include info boxes Images . . Code . You can format text and code per usual . General preformatted text: . # Do a thing do_thing() . Python code and output: . # Prints &#39;2&#39; print(1+1) . 2 . Formatting text as shell commands: . echo &quot;hello world&quot; ./some_script.sh --option &quot;value&quot; wget https://example.com/cat_photo1.png . Formatting text as YAML: . key: value - another_key: &quot;another value&quot; . Tables . Column 1 Column 2 . A thing | Another thing | . Tweetcards . Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 Footnotes . This is the footnote. &#8617; . |",
            "url": "https://kdc-ks-gov.github.io/kansas-data/markdown/2020/01/14/test-markdown-post.html",
            "relUrl": "/markdown/2020/01/14/test-markdown-post.html",
            "date": " • Jan 14, 2020"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About",
          "content": "About This Project . This website is powered by fastpages, a blogging platform that natively supports Jupyter notebooks in addition to other formats.1 View this project on GitHub. . Contributing . Please get in touch if you have visualization you would like to add or see an existing visualization that you would like to improve or fix. . . Familiarity with fastpages is helpful. All you need to do is include the appropriate front matter in your notebook. You can submit a pull request at github.com/github/kdc-ks-gov/kansas-data. &#8617; . |",
          "url": "https://kdc-ks-gov.github.io/kansas-data/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
  

  

  
  

  

  
  

  
  

  
  

  
      ,"page10": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://kdc-ks-gov.github.io/kansas-data/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}